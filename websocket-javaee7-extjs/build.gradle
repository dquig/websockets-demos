apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'

def JERSEY_VERSION = '2.9.1'
def WEBSOCKET_VERSION = '1.0'
def SLF4J_VERSION = '1.7.7'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

archivesBaseName = 'websocket_poc'

def buildNumber = System.properties["buildNumber"] ? System.properties["buildNumber"] : ''
version = System.properties["version"] ? System.properties["version"] + "-" + buildNumber : '0.1-SNAPSHOT' + "-" + buildNumber
def senchaEnvironment = System.properties["senchaEnvironment"] ? System.properties["senchaEnvironment"] : 'production'

repositories {
    //mavenLocal()

    maven {
        name "Glassfish promoted"
        url "https://maven.java.net/content/groups/promoted/"
    }
    mavenCentral()
}

dependencies {
    groovy 'org.codehaus.groovy:groovy-all:2.0.5'

    //providedCompile "javax:javaee-api:${glassfishVersion}"

    providedCompile "javax.websocket:javax.websocket-api:${WEBSOCKET_VERSION}"
    //providedCompile "javax.ws.rs:javax.ws.rs-api:${JERSEY_VERSION}"

    compile "org.glassfish.jersey.media:jersey-media-sse:${JERSEY_VERSION}"
    compile "org.glassfish.jersey.containers:jersey-container-servlet:${JERSEY_VERSION}"

    compile "com.google.code.gson:gson:2.2.4"
    compile "org.slf4j:slf4j-api:${SLF4J_VERSION}"
    compile "org.slf4j:jul-to-slf4j:${SLF4J_VERSION}"
    compile 'ch.qos.logback:logback-classic:1.1.2'

    //compile 'com.google.guava:guava:14.0'

    //testCompile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-bundle:${JERSEY_VERSION}"
}


/*war {
    def projectName = 'WebSocketDemo'
    manifest {
        attributes("Implementation-Version": version)
        attributes("Application-Name": projectName)
    }
    //classpath = fileTree(classpath).exclude('**')
    exclude '.sass-cache', '*.scss'

    from("${projectDir}/build/${senchaEnvironment}/${projectName}") {
        include 'app.js', 'resources/'
    }

    rootSpec.eachFile { details ->
        if (details.name == 'index.html') {
            println details
        }
    }
}*/

/*war.dependsOn {
    tasks.senchaCmd
}*/

task senchaCmd(type: Exec) {
    println "============== Sencha build properties ==============="
    println "WebappName:   TBD"
    println "workingDir:   ${project.webAppDirName}"
    println "environment:  ${senchaEnvironment}"
    println "rootDir:      ${rootDir}"
    println "projectDir:   ${projectDir}"
    println "============== End properties ==============="

    workingDir "${project.webAppDirName}"
    //executable "${projectDir}/lib/sencha/sencha"
    executable "sencha"
    args "app", "build", "${senchaEnvironment}"
}
task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}